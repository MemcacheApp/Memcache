// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String           @id
  firstName     String
  lastName      String
  password      String
  email         String           @unique
  sessions      Session[]
  items         Item[]
  collections   Collection[]
  tags          Tag[]
  flashcards    Flashcard[]
  publicProfile Boolean
  preferences   UserPreferences?
}

model UserPreferences {
  userId        String  @id
  user          User?   @relation(fields: [userId], references: [id])
  publicNewItem Boolean
}

model Session {
  id     String @id
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Item {
  id           String      @id
  type         String
  status       ItemStatus
  collection   Collection  @relation(fields: [collectionId], references: [id])
  collectionId String
  tags         Tag[]
  title        String
  url          String
  description  String
  thumbnail    String?
  createdAt    DateTime
  user         User        @relation(fields: [userId], references: [id])
  userId       String
  siteName     String
  duration     Int?
  releaseTime  DateTime?
  author       String?
  favicon      String?
  summaries    Summary[]
  flashcards   Flashcard[]
  public       Boolean
}

model Summary {
  id         String   @id
  createdAt  DateTime
  content    String
  item       Item     @relation(fields: [itemId], references: [id])
  itemId     String
  wordCount  Int
  experience SummaryExperience
  finetuning SummaryFinetuning
}

model Collection {
  id     String @id
  name   String
  items  Item[]
  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([userId, name])
}

model Tag {
  id     String @id
  name   String
  items  Item[]
  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([userId, name])
}

model ResetCode {
  userId   String   @id
  code     String
  createAt DateTime
}

model Flashcard {
  id         String              @id
  createdAt  DateTime
  question   String
  answer     String
  dueDate    DateTime
  reviews    FlashcardReview[]
  userId     String
  user       User                @relation(fields: [userId], references: [id])
  itemId     String
  item       Item                @relation(fields: [itemId], references: [id])
  experience FlashcardExperience
  range      FlashcardRange
}

model FlashcardReview {
  id          String                @id
  start       DateTime
  end         DateTime
  rating      FlashcardReviewRating
  flashcard   Flashcard             @relation(fields: [flashcardId], references: [id])
  flashcardId String
}

enum ItemStatus {
  Inbox
  Underway
  Complete
  Archive
}

enum FlashcardReviewRating {
  Easy
  Medium
  Hard
  Forgot
}

enum FlashcardExperience {
  Beginner
  Intermediate
  Advanced
}

enum FlashcardRange {
  Depth
  Breadth
  Balanced
}

enum SummaryExperience {
  Beginner
  Intermediate
  Advanced
}

enum SummaryFinetuning {
  Qualitative
  Quantitative
  Balanced
}
